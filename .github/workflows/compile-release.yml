name: Go Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and release
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.3

      - name: Check out code
        uses: actions/checkout@v2

      - name: Build program
        run: |
          GOOS=windows GOARCH=amd64 go build -o tictactoe_windows_amd64.exe main.go

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./myprogram_windows_amd64.exe
          asset_name: myprogram_windows_amd64.exe
          asset_content_type: application/octet-stream

      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./myprogram_darwin_amd64
      #     asset_name: myprogram_darwin_amd64
      #     asset_content_type: application/octet-stream

      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./myprogram_linux_amd64
      #     asset_name: myprogram_linux_amd64
      #     asset_content_type: application/octet-stream
